<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>YouTube Thumbnail Grabber - Download HD Thumbnails for Free</title>
    <meta name="description" content="Free YouTube Thumbnail Downloader. Extract high-quality thumbnails from any YouTube video in HD, SD, MQ, and Max Resolution formats instantly.">
    <meta name="keywords" content="youtube thumbnail, thumbnail downloader, youtube thumbnail grabber, get youtube thumbnails, download youtube thumbnail, youtube thumbnail extractor">
    <meta name="author" content="ThumbnailGrabber">
    <meta name="robots" content="index, follow">
    <link rel="canonical" href="https://thumbnailgrabber.com">
    <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>ðŸŽ¬</text></svg>">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #FF0000;
            --primary-dark: #CC0000;
            --secondary: #282828;
            --light: #f8f9fa;
            --dark: #212121;
            --gray: #6c757d;
            --success: #28a745;
            --border: #dee2e6;
            --card-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);
            color: var(--dark);
            line-height: 1.6;
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        header {
            text-align: center;
            padding: 30px 0;
            margin-bottom: 20px;
        }
        
        .logo {
            color: var(--primary);
            font-size: 3.5rem;
            margin-bottom: 15px;
        }
        
        h1 {
            font-size: 2.8rem;
            margin-bottom: 15px;
            color: var(--secondary);
            font-weight: 700;
            line-height: 1.2;
        }
        
        .tagline {
            font-size: 1.3rem;
            color: var(--gray);
            max-width: 700px;
            margin: 0 auto 20px;
            font-weight: 400;
        }
        
        .card {
            background: white;
            border-radius: 12px;
            box-shadow: var(--card-shadow);
            overflow: hidden;
            margin-bottom: 30px;
            transition: transform 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
        }
        
        .card-header {
            background: var(--primary);
            color: white;
            padding: 18px 25px;
            font-size: 1.3rem;
            font-weight: 600;
        }
        
        .card-body {
            padding: 25px;
        }
        
        .input-group {
            display: flex;
            margin-bottom: 20px;
        }
        
        #videoUrl {
            flex: 1;
            padding: 15px 20px;
            border: 2px solid var(--border);
            border-radius: 6px 0 0 6px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        #videoUrl:focus {
            outline: none;
            border-color: var(--primary);
        }
        
        #getThumbnails {
            background-color: var(--primary);
            color: white;
            border: none;
            padding: 0 25px;
            cursor: pointer;
            font-weight: 600;
            border-radius: 0 6px 6px 0;
            transition: background-color 0.3s;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        #getThumbnails:hover {
            background-color: var(--primary-dark);
        }
        
        .examples {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 15px;
            align-items: center;
        }
        
        .example-btn {
            background: var(--light);
            border: 1px solid var(--border);
            border-radius: 20px;
            padding: 8px 15px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .example-btn:hover {
            background: var(--primary);
            color: white;
            border-color: var(--primary);
        }
        
        .thumbnails-container {
            display: none;
        }
        
        .thumbnails-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 25px;
            margin-top: 20px;
        }
        
        .thumbnail-card {
            border: 1px solid var(--border);
            border-radius: 10px;
            overflow: hidden;
            transition: transform 0.3s, box-shadow 0.3s;
            background: white;
        }
        
        .thumbnail-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--card-shadow);
        }
        
        .thumbnail-img-container {
            position: relative;
            overflow: hidden;
            height: 180px;
        }
        
        .thumbnail-img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s;
        }
        
        .thumbnail-card:hover .thumbnail-img {
            transform: scale(1.05);
        }
        
        .thumbnail-info {
            padding: 15px;
        }
        
        .thumbnail-quality {
            font-weight: 600;
            margin-bottom: 12px;
            color: var(--secondary);
            font-size: 16px;
        }
        
        .thumbnail-actions {
            display: flex;
            gap: 10px;
        }
        
        .btn {
            padding: 8px 15px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 500;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 5px;
            transition: opacity 0.3s;
            font-size: 14px;
        }
        
        .btn:hover {
            opacity: 0.9;
        }
        
        .btn-view {
            background: #4285F4;
            color: white;
        }
        
        .btn-download {
            background: var(--success);
            color: white;
        }
        
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 8px;
            background: white;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            display: flex;
            align-items: center;
            gap: 10px;
            transform: translateX(150%);
            transition: transform 0.4s ease;
            z-index: 1000;
        }
        
        .notification.show {
            transform: translateX(0);
        }
        
        .notification.error {
            border-left: 4px solid #dc3545;
        }
        
        .notification.success {
            border-left: 4px solid var(--success);
        }
        
        .notification i {
            font-size: 20px;
        }
        
        .notification.error i {
            color: #dc3545;
        }
        
        .notification.success i {
            color: var(--success);
        }
        
        .loading {
            display: none;
            text-align: center;
            padding: 30px 0;
        }
        
        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-left-color: var(--primary);
            animation: spin 1s linear infinite;
            margin: 0 auto 15px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin: 40px 0;
        }
        
        .feature {
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: var(--card-shadow);
            text-align: center;
        }
        
        .feature i {
            font-size: 2.5rem;
            color: var(--primary);
            margin-bottom: 15px;
        }
        
        .feature h3 {
            margin-bottom: 15px;
            color: var(--secondary);
        }
        
        .faq {
            margin: 40px 0;
        }
        
        .faq-item {
            background: white;
            border-radius: 8px;
            margin-bottom: 15px;
            overflow: hidden;
            box-shadow: var(--card-shadow);
        }
        
        .faq-question {
            padding: 20px;
            font-weight: 600;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .faq-answer {
            padding: 0 20px 20px;
            color: var(--gray);
        }
        
        footer {
            text-align: center;
            margin-top: 50px;
            padding: 25px 0;
            color: var(--gray);
            border-top: 1px solid var(--border);
        }
        
        @media (max-width: 768px) {
            .input-group {
                flex-direction: column;
            }
            
            #videoUrl {
                border-radius: 6px;
                margin-bottom: 10px;
            }
            
            #getThumbnails {
                border-radius: 6px;
                padding: 12px;
                justify-content: center;
            }
            
            .thumbnails-grid {
                grid-template-columns: 1fr;
            }
            
            h1 {
                font-size: 2.2rem;
            }
            
            .tagline {
                font-size: 1.1rem;
            }
        }
        
        .schema-data {
            display: none;
        }
        
        .breadcrumb {
            margin-bottom: 20px;
            font-size: 14px;
            color: var(--gray);
        }
        
        .breadcrumb a {
            color: var(--primary);
            text-decoration: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Breadcrumb for SEO -->
        <div class="breadcrumb">
            <a href="#">Home</a> > <a href="#">Tools</a> > YouTube Thumbnail Grabber
        </div>
        
        <header>
            <div class="logo">
                <i class="fab fa-youtube"></i>
            </div>
            <h1>YouTube Thumbnail Grabber</h1>
            <p class="tagline">Extract and download high-quality thumbnails from any YouTube video instantly - 100% Free</p>
        </header>
        
        <main>
            <section class="card">
                <div class="card-header">
                    <i class="fas fa-download"></i> Download YouTube Thumbnails
                </div>
                <div class="card-body">
                    <div class="input-group">
                        <input type="text" id="videoUrl" placeholder="Paste YouTube video URL here...">
                        <button id="getThumbnails">
                            <i class="fas fa-bolt"></i> Get Thumbnails
                        </button>
                    </div>
                    
                    <div class="examples">
                        <span>Try example: </span>
                        <button class="example-btn" data-url="https://www.youtube.com/watch?v=dQw4w9WgXcQ">Rick Astley</button>
                        <button class="example-btn" data-url="https://www.youtube.com/watch?v=jNQXAC9IVRw">Me at the zoo</button>
                        <button class="example-btn" data-url="https://www.youtube.com/watch?v=WcIcVapfqXw">Keyboard Cat</button>
                    </div>
                </div>
            </section>
            
            <div class="loading" id="loading">
                <div class="spinner"></div>
                <p>Extracting thumbnails...</p>
            </div>
            
            <section class="card thumbnails-container" id="thumbnailsContainer">
                <div class="card-header">
                    <i class="fas fa-images"></i> Available Thumbnails
                </div>
                <div class="card-body">
                    <div class="thumbnails-grid" id="thumbnailsGrid"></div>
                </div>
            </section>
            
            <!-- Features Section for SEO -->
            <section class="features">
                <div class="feature">
                    <i class="fas fa-bolt"></i>
                    <h3>Instant Results</h3>
                    <p>Get thumbnails from any YouTube video in seconds with our fast and reliable tool.</p>
                </div>
                <div class="feature">
                    <i class="fas fa-download"></i>
                    <h3>Free Download</h3>
                    <p>Download thumbnails in multiple resolutions completely free of charge.</p>
                </div>
                <div class="feature">
                    <i class="fas fa-shield-alt"></i>
                    <h3>No Registration</h3>
                    <p>Use our thumbnail grabber without signing up or providing any personal information.</p>
                </div>
            </section>
            
            <!-- FAQ Section for SEO -->
            <section class="faq">
                <h2>Frequently Asked Questions</h2>
                <div class="faq-item">
                    <div class="faq-question">
                        How do I get a thumbnail from a YouTube video?
                        <i class="fas fa-chevron-down"></i>
                    </div>
                    <div class="faq-answer">
                        Simply paste the YouTube URL into the input field above and click "Get Thumbnails". Our tool will extract all available thumbnail resolutions for you to download.
                    </div>
                </div>
                <div class="faq-item">
                    <div class="faq-question">
                        What resolutions are available?
                        <i class="fas fa-chevron-down"></i>
                    </div>
                    <div class="faq-answer">
                        Our tool extracts thumbnails in multiple resolutions including Max Resolution (1280x720), Standard Definition (640x480), High Quality (480x360), Medium Quality (320x180), and Default (120x90).
                    </div>
                </div>
                <div class="faq-item">
                    <div class="faq-question">
                        Is this YouTube thumbnail downloader free?
                        <i class="fas fa-chevron-down"></i>
                    </div>
                    <div class="faq-answer">
                        Yes, our YouTube Thumbnail Grabber is completely free to use with no hidden fees or registration required.
                    </div>
                </div>
            </section>
        </main>
        
        <footer>
            <p>Â© 2023 YouTube Thumbnail Grabber | This tool complies with YouTube's Terms of Service</p>
        </footer>
    </div>
    
    <div class="notification" id="notification">
        <i class="fas fa-check-circle"></i>
        <span id="notification-text">Notification message</span>
    </div>

    <!-- Schema.org structured data for SEO -->
    <script type="application/ld+json" class="schema-data">
    {
      "@context": "https://schema.org",
      "@type": "WebApplication",
      "name": "YouTube Thumbnail Grabber",
      "url": "https://thumbnailgrabber.com",
      "description": "Free YouTube Thumbnail Downloader. Extract high-quality thumbnails from any YouTube video in HD, SD, MQ, and Max Resolution formats instantly.",
      "applicationCategory": "MultimediaApplication",
      "operatingSystem": "Any",
      "offers": {
        "@type": "Offer",
        "price": "0",
        "priceCurrency": "USD"
      }
    }
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const videoUrlInput = document.getElementById('videoUrl');
            const getThumbnailsBtn = document.getElementById('getThumbnails');
            const thumbnailsContainer = document.getElementById('thumbnailsContainer');
            const thumbnailsGrid = document.getElementById('thumbnailsGrid');
            const loadingElement = document.getElementById('loading');
            const notification = document.getElementById('notification');
            const notificationText = document.getElementById('notification-text');
            const exampleButtons = document.querySelectorAll('.example-btn');
            const faqQuestions = document.querySelectorAll('.faq-question');
            
            // Handle click event
            getThumbnailsBtn.addEventListener('click', fetchThumbnails);
            
            // Handle Enter key press
            videoUrlInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    fetchThumbnails();
                }
            });
            
            // Example button handlers
            exampleButtons.forEach(button => {
                button.addEventListener('click', function() {
                    videoUrlInput.value = this.getAttribute('data-url');
                    fetchThumbnails();
                });
            });
            
            // FAQ toggle
            faqQuestions.forEach(question => {
                question.addEventListener('click', function() {
                    const answer = this.nextElementSibling;
                    answer.style.display = answer.style.display === 'block' ? 'none' : 'block';
                    const icon = this.querySelector('i');
                    icon.className = icon.className === 'fas fa-chevron-down' ? 
                        'fas fa-chevron-up' : 'fas fa-chevron-down';
                });
            });
            
            function fetchThumbnails() {
                const url = videoUrlInput.value.trim();
                const videoId = extractVideoId(url);
                
                // Hide previous results
                thumbnailsContainer.style.display = 'none';
                
                if (!videoId) {
                    showNotification('Please enter a valid YouTube URL', 'error');
                    return;
                }
                
                // Show loading
                loadingElement.style.display = 'block';
                
                // Simulate loading for better UX
                setTimeout(() => {
                    // Define all possible thumbnail qualities
                    const thumbnailQualities = [
                        { name: 'Maximum Resolution (HD)', code: 'maxresdefault', resolution: '1280x720' },
                        { name: 'Standard Quality', code: 'sddefault', resolution: '640x480' },
                        { name: 'High Quality', code: 'hqdefault', resolution: '480x360' },
                        { name: 'Medium Quality', code: 'mqdefault', resolution: '320x180' },
                        { name: 'Default Quality', code: 'default', resolution: '120x90' }
                    ];
                    
                    // Clear previous thumbnails
                    thumbnailsGrid.innerHTML = '';
                    
                    // Generate thumbnail cards
                    thumbnailQualities.forEach(quality => {
                        const thumbnailUrl = `https://img.youtube.com/vi/${videoId}/${quality.code}.jpg`;
                        
                        const card = document.createElement('div');
                        card.className = 'thumbnail-card';
                        card.innerHTML = `
                            <div class="thumbnail-img-container">
                                <img src="${thumbnailUrl}" alt="${quality.name} thumbnail for YouTube video" class="thumbnail-img" onerror="this.parentNode.parentNode.style.display='none'">
                            </div>
                            <div class="thumbnail-info">
                                <div class="thumbnail-quality">${quality.name} <small>(${quality.resolution})</small></div>
                                <div class="thumbnail-actions">
                                    <a href="${thumbnailUrl}" target="_blank" class="btn btn-view">
                                        <i class="fas fa-eye"></i> View
                                    </a>
                                    <a href="${thumbnailUrl}" download="youtube-thumbnail-${videoId}-${quality.code}.jpg" class="btn btn-download">
                                        <i class="fas fa-download"></i> Download
                                    </a>
                                </div>
                            </div>
                        `;
                        
                        thumbnailsGrid.appendChild(card);
                    });
                    
                    // Hide loading
                    loadingElement.style.display = 'none';
                    
                    // Show the thumbnails container
                    thumbnailsContainer.style.display = 'block';
                    
                    // Show success notification
                    showNotification('Thumbnails extracted successfully!', 'success');
                    
                    // Scroll to results
                    thumbnailsContainer.scrollIntoView({ behavior: 'smooth' });
                }, 1000);
            }
            
            function extractVideoId(url) {
                // Regular expression to extract YouTube video ID
                const regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/;
                const match = url.match(regExp);
                
                return (match && match[2].length === 11) ? match[2] : null;
            }
            
            function showNotification(message, type) {
                notificationText.textContent = message;
                notification.className = 'notification show ' + type;
                
                const icon = notification.querySelector('i');
                if (type === 'error') {
                    icon.className = 'fas fa-exclamation-circle';
                } else {
                    icon.className = 'fas fa-check-circle';
                }
                
                // Hide notification after 3 seconds
                setTimeout(() => {
                    notification.classList.remove('show');
                }, 3000);
            }
        });
    </script>
</body>
</html>
